{"ast":null,"code":"import _classCallCheck from \"/Users/maxsegovia/Documents/GitHub/landing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxsegovia/Documents/GitHub/landing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxsegovia/Documents/GitHub/landing/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxsegovia/Documents/GitHub/landing/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxsegovia/Documents/GitHub/landing/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maxsegovia/Documents/GitHub/landing/src/Components/Quoting/Item.js\";\nimport React, { Component } from 'react';\nimport { DragSource } from 'react-dnd';\nvar itemSource = {\n  beginDrag: function beginDrag(props) {\n    return props.item;\n  },\n  endDrag: function endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    return props.handleDrop(props.item.name);\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar Item =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Item, _Component);\n\n  function Item() {\n    _classCallCheck(this, Item);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Item).apply(this, arguments));\n  }\n\n  _createClass(Item, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isDragging = _this$props.isDragging,\n          connectDragSource = _this$props.connectDragSource,\n          item = _this$props.item;\n      return connectDragSource(React.createElement(\"div\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.item.image[0],\n        alt: this.props.item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.item.name)))))); // return (\n      //     <div className=\"item\">\n      //         <div className=\"row\">\n      //             <div className=\"col-md-6\">\n      //                 <img src={this.props.item.image[0]} alt={this.props.item.name}/>\n      //             </div>\n      //             <div className=\"col-md-6\">\n      //                 <p><strong>{this.props.item.name}</strong></p>\n      //             </div>\n      //         </div>\n      //     </div>\n      // );\n    }\n  }]);\n\n  return Item;\n}(Component);\n\nexport default DragSource('item', itemSource, collect)(Item);","map":{"version":3,"sources":["/Users/maxsegovia/Documents/GitHub/landing/src/Components/Quoting/Item.js"],"names":["React","Component","DragSource","itemSource","beginDrag","props","item","endDrag","monitor","component","didDrop","handleDrop","name","collect","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","Item","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SADe,qBACLC,KADK,EACE;AACb,WAAOA,KAAK,CAACC,IAAb;AACH,GAHc;AAIfC,EAAAA,OAJe,mBAIPF,KAJO,EAIAG,OAJA,EAISC,SAJT,EAIoB;AAC/B,QAAI,CAACD,OAAO,CAACE,OAAR,EAAL,EAAwB;AACpB;AACH;;AACD,WAAOL,KAAK,CAACM,UAAN,CAAiBN,KAAK,CAACC,IAAN,CAAWM,IAA5B,CAAP;AACH;AATc,CAAnB;;AAYA,SAASC,OAAT,CAAiBC,OAAjB,EAA0BN,OAA1B,EAAmC;AAC/B,SAAO;AACHO,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADhB;AAEHC,IAAAA,kBAAkB,EAAEH,OAAO,CAACI,WAAR,EAFjB;AAGHC,IAAAA,UAAU,EAAEX,OAAO,CAACW,UAAR;AAHT,GAAP;AAKH;;IAEKC,I;;;;;;;;;;;;;6BACO;AAAA,wBAC2C,KAAKf,KADhD;AAAA,UACGc,UADH,eACGA,UADH;AAAA,UACeJ,iBADf,eACeA,iBADf;AAAA,UACkCT,IADlC,eACkCA,IADlC;AAEL,aAAOS,iBAAiB,CACpB;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWC,IAAX,CAAgBe,KAAhB,CAAsB,CAAtB,CAAV;AAAoC,QAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWC,IAAX,CAAgBM,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKP,KAAL,CAAWC,IAAX,CAAgBM,IAAzB,CAAH,CADJ,CAJJ,CADJ,CADoB,CAAxB,CAFK,CAcL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;;EA3BcX,S;;AA8BnB,eAAeC,UAAU,CAAC,MAAD,EAASC,UAAT,EAAqBU,OAArB,CAAV,CAAwCO,IAAxC,CAAf","sourcesContent":["import React, { Component }from 'react';\nimport { DragSource } from 'react-dnd';\n\nconst itemSource = {\n    beginDrag(props) {\n        return props.item;\n    },\n    endDrag(props, monitor, component) {\n        if (!monitor.didDrop()) {\n            return;\n        }\n        return props.handleDrop(props.item.name);\n    }\n};\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        connectDragPreview: connect.dragPreview(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass Item extends Component{\n    render() {\n        const { isDragging, connectDragSource, item } = this.props;\n        return connectDragSource(\n            <div className=\"item\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <img src={this.props.item.image[0]} alt={this.props.item.name}/>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <p><strong>{this.props.item.name}</strong></p>\n                    </div>\n                </div>\n            </div>\n        );\n        // return (\n        //     <div className=\"item\">\n        //         <div className=\"row\">\n        //             <div className=\"col-md-6\">\n        //                 <img src={this.props.item.image[0]} alt={this.props.item.name}/>\n        //             </div>\n        //             <div className=\"col-md-6\">\n        //                 <p><strong>{this.props.item.name}</strong></p>\n        //             </div>\n        //         </div>\n        //     </div>\n        // );\n    }\n}\n\nexport default DragSource('item', itemSource, collect)(Item)\n"]},"metadata":{},"sourceType":"module"}