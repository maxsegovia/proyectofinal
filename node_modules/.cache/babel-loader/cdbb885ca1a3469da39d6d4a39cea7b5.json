{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar wrapConnectorHooks_1 = require(\"./wrapConnectorHooks\");\n\nvar shallowEqual = require('shallowequal');\n\nfunction createTargetConnector(backend) {\n  var currentHandlerId;\n  var currentDropTargetNode;\n  var currentDropTargetOptions;\n  var disconnectCurrentDropTarget;\n\n  function reconnectDropTarget() {\n    if (disconnectCurrentDropTarget) {\n      disconnectCurrentDropTarget();\n      disconnectCurrentDropTarget = undefined;\n    }\n\n    if (currentHandlerId && currentDropTargetNode) {\n      disconnectCurrentDropTarget = backend.connectDropTarget(currentHandlerId, currentDropTargetNode, currentDropTargetOptions);\n    }\n  }\n\n  function receiveHandlerId(handlerId) {\n    if (handlerId === currentHandlerId) {\n      return;\n    }\n\n    currentHandlerId = handlerId;\n    reconnectDropTarget();\n  }\n\n  var hooks = wrapConnectorHooks_1.default({\n    dropTarget: function connectDropTarget(node, options) {\n      if (node === currentDropTargetNode && shallowEqual(options, currentDropTargetOptions)) {\n        return;\n      }\n\n      currentDropTargetNode = node;\n      currentDropTargetOptions = options;\n      reconnectDropTarget();\n    }\n  });\n  return {\n    receiveHandlerId: receiveHandlerId,\n    hooks: hooks\n  };\n}\n\nexports.default = createTargetConnector;","map":null,"metadata":{},"sourceType":"script"}